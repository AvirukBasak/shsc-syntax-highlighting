{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Shsc",
	"scopeName": "source.shsc",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keyword"
		},
		{
			"include": "#builtin-type"
		},
		{
			"include": "#c-like-opreator"
		},
		{
			"include": "#numeric-literal"
		},
		{
			"include": "#character-string"
		},
		{
			"include": "#string"
		},
		{
			"include": "#format-string"
		},
		{
			"include": "#module-decl"
		},
		{
			"include": "#module-ref"
		},
		{
			"include": "#function"
		},
		{
			"include": "#identifier"
		}
	],
	"repository": {
		"comment": {
			"name": "comment.line",
			"match": "#.*"
		},
		"keyword": {
			"patterns": [
				{
					"name": "keyword",
					"match": "\\b(var|const|weak)\\b"
				},
				{
					"name": "keyword.control",
					"match": "\\b(proc|start|if|elif|then|else|while|for|in|from|to|by|do|block|end|return|pass|break|continue)\\b"
				},
				{
					"name": "keyword.other",
					"match": "\\b(true|false|null|lf)\\b"
				}
			]
		},
		"builtin-type": {
			"name": "entity.name.class",
			"match": "\\b(bul|chr|i64|f64|str|lst|map|any)\\b"
		},
		"c-like-opreator": {
			"name": "keyword.operator",
			"match": "\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*=|\\*|\\/\\/=|\\/=|\\/|%|\\^=|\\^|&=|&&|&|\\|\\|=|\\|=|\\|\\||\\||<<=|<<|<=|<|>>=|>>|>=|>|==|=|!=|!|~|\\?|:|\\.|;|\\[|\\]|\\(|\\)|\\{|\\}"
		},
		"numeric-literal": {
			"name": "constant.numeric",
			"match": "\\b(0b[01]+|0o[0-7]+|0x[0-9a-fA-F]+|\\d+(\\.\\d+)?([eE][+-]?\\d+)?)\\b"
		},
		"character-string": {
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.shsc",
					"match": "\\\\."
				}
			]
		},
		"string": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.shsc",
					"match": "\\\\."
				}
			]
		},
		"format-string": {
			"name": "string.interpolated",
			"begin": "f\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				},
				{
					"name": "constant.character.escape",
					"match": "\\{[^}]*\\}"
				}
			]
		},
		"module-decl": {
			"match": "(module)\\s+([a-zA-Z_][a-zA-Z0-9_:]*)\\n+",
			"captures": {
				"1": {
					"name": "keyword"
				},
				"2": {
					"name": "entity.name.class",
					"patterns": [
						{
							"match": "([a-zA-Z_][a-zA-Z0-9_]*)(:+)",
							"captures": {
								"1": {
									"name": "entity.name.class"
								},
								"2": {
									"name": "keyword.operator"
								}
							}
						}
					]
				}
			}
		},
		"module-ref": {
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(:|::)\\b",
			"captures": {
				"1": {
					"name": "entity.name.class"
				},
				"2": {
					"name": "keyword.operator"
				}
			}
		},
		"function": {
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
			"captures": {
				"1": {
					"name": "entity.name.function"
				}
			}
		},
		"identifier": {
			"name": "variable",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
		}
	}
}